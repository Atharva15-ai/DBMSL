Microsoft Windows [Version 10.0.19045.6332]
(c) Microsoft Corporation. All rights reserved.

C:\Program Files\MongoDB\Server\8.0\bin\mongosh-2.5.8-win32-x64\bin>mongosh
Current Mongosh Log ID: 68e4ba10472e257b40cebea3
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.5.8
Using MongoDB:          8.0.14
Using Mongosh:          2.5.8

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

------
   The server generated these startup warnings when booting
   2025-10-06T11:57:49.053+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test>
test> use bank;
switched to db bank
bank> db.customer.insertMany([{cust_id:1,cust_name:"Rajesh",branch:"Delhi",bank_name:"SBI",balance:5000},{cust_id:2,cust_name:"Anjali",branch:"Mumbai",bank_name:"HDFC",balance:30000},{cust_id:3,cust_name:"Virat",branch:"Pune",bank_name:"Axis",balance:400000}]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('68e4bbe5472e257b40cebea4'),
    '1': ObjectId('68e4bbe5472e257b40cebea5'),
    '2': ObjectId('68e4bbe5472e257b40cebea6')
  }
}
bank> db.customer.aggregate([{$group:{_id:null,totalBalance:{$sum:"$balance"}}}]);
[ { _id: null, totalBalance: 435000 } ]
bank> db.customer.aggregate([{$group:{_id:null,minBalance:{$min:"$balance"},maxBalance:{$max:"$balance"},avgBalance:{$avg:"$balance"}}}]);
[
  {
    _id: null,
    minBalance: 5000,
    maxBalance: 400000,
    avgBalance: 145000
  }
]
bank> db.customer.aggregate([{$group:{_id:null,stack:{$push:"$$ROOT"}}}]);
[
  {
    _id: null,
    stack: [
      {
        _id: ObjectId('68e4bbe5472e257b40cebea4'),
        cust_id: 1,
        cust_name: 'Rajesh',
        branch: 'Delhi',
        bank_name: 'SBI',
        balance: 5000
      },
      {
        _id: ObjectId('68e4bbe5472e257b40cebea5'),
        cust_id: 2,
        cust_name: 'Anjali',
        branch: 'Mumbai',
        bank_name: 'HDFC',
        balance: 30000
      },
      {
        _id: ObjectId('68e4bbe5472e257b40cebea6'),
        cust_id: 3,
        cust_name: 'Virat',
        branch: 'Pune',
        bank_name: 'Axis',
        balance: 400000
      }
    ]
  }
]
bank> db.customer.distinct("balance");
[ 5000, 30000, 400000 ]
bank> db.customer.find().sort({cust_id:1}).limit(1);
[
  {
    _id: ObjectId('68e4bbe5472e257b40cebea4'),
    cust_id: 1,
    cust_name: 'Rajesh',
    branch: 'Delhi',
    bank_name: 'SBI',
    balance: 5000
  }
]
bank> db.customer.find().sort({cust_id:-1}).limit(1);
[
  {
    _id: ObjectId('68e4bbe5472e257b40cebea6'),
    cust_id: 3,
    cust_name: 'Virat',
    branch: 'Pune',
    bank_name: 'Axis',
    balance: 400000
  }
]
bank> db.customer.createIndex({cust_id:1});
cust_id_1
bank> db.customer.getIndexes();
[
  { v: 2, key: { _id: 1 }, name: '_id_' },
  { v: 2, key: { cust_id: 1 }, name: 'cust_id_1' }
bank> db.customer.aggregate([{$group:{_id:"$bank",totalBalance:{$sum:"$balance"}}}]);
[ { _id: null, totalBalance: 435000 } ]
bank> db.customer.createIndex({cust_id:1,cust_id:-1});
cust_id_-1
bank> db.customer.createIndex({cust_name:1},{sparse:true});
cust_name_1
bank> db.customer.getIndexes();
[
  { v: 2, key: { _id: 1 }, name: '_id_' },
  { v: 2, key: { cust_id: 1 }, name: 'cust_id_1' },
  { v: 2, key: { cust_id: -1 }, name: 'cust_id_-1' },
  { v: 2, key: { cust_name: 1 }, name: 'cust_name_1', sparse: true }
]
bank> db.customer.createIndex({branch:1},{unique:true});
branch_1
bank> db.customer.getIndexes();
[
  { v: 2, key: { _id: 1 }, name: '_id_' },
  { v: 2, key: { cust_id: 1 }, name: 'cust_id_1' },
  { v: 2, key: { cust_id: -1 }, name: 'cust_id_-1' },
  { v: 2, key: { cust_name: 1 }, name: 'cust_name_1', sparse: true },
  { v: 2, key: { branch: 1 }, name: 'branch_1', unique: true }
]
